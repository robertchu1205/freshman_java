package avl;

import static org.junit.Assert.*;

import org.junit.Test;

public class AvlTreeTest {
		AvlTree tree = new AvlTree();
	AvlNode node=new AvlNode();
	@Test
	public void testAvlTree() {
		
	}

	@Test
	public void testIsEmpty() {
	
		boolean n=tree.isEmpty();
		assertEquals(true,n);
	}

	/*@Test
	public void testMakeEmpty() {
		fail("Not yet implemented");
	}

	@Test
	public void testInsert() {
		fail("Not yet implemented");
	}

	@Test
	public void testCountNodes() {
		fail("Not yet implemented");
	}

	@Test
	public void testSearch() {
		fail("Not yet implemented");
	}

	@Test
	public void testInorder() {
		fail("Not yet implemented");
	}

	@Test
	public void testPreorder() {
		fail("Not yet implemented");
	}

	@Test
	public void testPostorder() {
		fail("Not yet implemented");
	}

	@Test
	public void testObject() {
		fail("Not yet implemented");
	}

	@Test
	public void testGetClass() {
		fail("Not yet implemented");
	}

	@Test
	public void testHashCode() {
		fail("Not yet implemented");
	}

	@Test
	public void testEquals() {
		fail("Not yet implemented");
	}

	@Test
	public void testClone() {
		fail("Not yet implemented");
	}

	@Test
	public void testToString() {
		fail("Not yet implemented");
	}

	@Test
	public void testNotify() {
		fail("Not yet implemented");
	}

	@Test
	public void testNotifyAll() {
		fail("Not yet implemented");
	}

	@Test
	public void testWaitLong() {
		fail("Not yet implemented");
	}

	@Test
	public void testWaitLongInt() {
		fail("Not yet implemented");
	}

	@Test
	public void testWait() {
		fail("Not yet implemented");
	}

	@Test
	public void testFinalize() {
		fail("Not yet implemented");
	}*/

}
